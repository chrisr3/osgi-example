import static org.gradle.api.JavaVersion.*
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.jetbrains.kotlin.jvm' apply false
    id 'base'
    id 'idea'
}

subprojects {
    buildscript {
        configurations.classpath {
            // Ensure we find the latest SNAPSHOTs of the plugins.
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }
    }

    group 'com.example.osgi'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenCentral()
        maven {
            url "$artifactory_contextUrl/corda-dependencies"
        }
    }

    configurations {
        all {
            // Ensure we find the latest SNAPSHOTs of our dependencies.
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = VERSION_1_8
        targetCompatibility = VERSION_1_8
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            languageVersion = '1.4'
            apiVersion = '1.4'
            jvmTarget = VERSION_1_8
            freeCompilerArgs = [
                '-Xjvm-default=all',
                // Prevent Kotlin from warning about kotlin.* classes inside the OSGi bundle.
                '-Xskip-runtime-version-check'
            ]
            //allWarningsAsErrors = true
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()

        // Prevent the project from creating temporary files outside of the build directory.
        systemProperty 'java.io.tmpdir', buildDir.absolutePath
    }
}

wrapper {
    gradleVersion = '6.8.3'
    distributionType = Wrapper.DistributionType.ALL
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
