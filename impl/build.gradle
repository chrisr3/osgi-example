import aQute.bnd.gradle.Bundle
import aQute.bnd.gradle.Resolve
import aQute.bnd.gradle.TestOSGi

plugins {
    id 'biz.aQute.bnd.builder'
    id 'org.jetbrains.kotlin.jvm'
    id 'java-library'
}

sourceSets {
    integrationTest {
        kotlin {
            srcDirs = [ 'src/integration-test/kotlin' ]
        }
        resources {
            srcDirs = [ 'src/integration-test/resources' ]
        }
    }
}

configurations {
    testArtifacts
    testCompileOnly.extendsFrom compileOnly
    integrationTestApi.extendsFrom testApi
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
}

dependencies {
    api project(':api')
    implementation "net.corda.kotlin:kotlin-stdlib-jdk8-osgi:$kotlin_version"

    compileOnly "org.osgi:osgi.core:$osgi_version"
    compileOnly "org.osgi:osgi.annotation:$osgi_version"
    compileOnly "org.osgi:org.osgi.service.component.annotations:$osgi_component_annotations_version"
    compileOnly "org.osgi:org.osgi.service.log:$osgi_log_version"
    implementation "org.bouncycastle:bcprov-jdk15on:$bouncycastle_version"
    implementation "org.slf4j:slf4j-api:$slf4j_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    integrationTestImplementation "org.osgi:org.osgi.test.junit5:$osgi_test_junit5_version"
    integrationTestRuntimeOnly "org.junit.platform:junit-platform-launcher:$junit_platform_version"
    integrationTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    integrationTestRuntimeOnly "org.apache.felix:org.apache.felix.framework:$felix_version"
    integrationTestRuntimeOnly "org.apache.felix:org.apache.felix.scr:$felix_scr_version"
    integrationTestRuntimeOnly "org.osgi:org.osgi.util.function:$osgi_util_function_version"
    integrationTestRuntimeOnly "org.osgi:org.osgi.util.promise:$osgi_util_promise_version"

    // Basic SLF4J back-end
    integrationTestRuntimeOnly project(':logging')
    integrationTestRuntimeOnly "org.slf4j:slf4j-simple:$slf4j_version"
}

tasks.named('jar', Jar) {
   bnd """
Bundle-Name: OSGi Example Impl
Bundle-SymbolicName: com.example.osgi.impl
"""
}

def testingBundle = tasks.register('testingBundle', Bundle) {
    archiveClassifier = 'tests'
    from sourceSets.integrationTest.output
    sourceSet = sourceSets.integrationTest

    bnd """
Bundle-SymbolicName: \${task.archiveBaseName}-\${task.archiveClassifier}
Test-Cases: \${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.platform.commons.annotation.Testable;CONCRETE}
"""
}

def resolve = tasks.register('resolve', Resolve) {
    bundles = sourceSets.integrationTest.runtimeClasspath + configurations.archives.artifacts.files
    bndrun = 'test.bndrun'
}

def testOSGi = tasks.register('testOSGi', TestOSGi) {
    dependsOn resolve
    bundles = sourceSets.integrationTest.runtimeClasspath + configurations.archives.artifacts.files
    bndrun = 'test.bndrun'
}

tasks.named('check') {
    dependsOn resolve, testOSGi
}

artifacts {
    archives testingBundle
    testArtifacts testingBundle
}
